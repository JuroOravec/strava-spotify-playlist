overwrite: true
schema:
  - './src/modules/**/graphql/schema.ts'
generates:
  src/types/graphql.d.ts:
    plugins:
      - typescript
      - typescript-resolvers
      - time
      - add:
          content: |
            /* eslint-disable */
            /* This file is autogenerated, see codegen.composables.yml */

            import type { AnyServerModules } from '../lib/ServerModule';

            /**
             * Context available in ResolverContext
             *
             * To extend this interface, use:
             * @example
             * declare module './path/to/graphql.d.ts' {
             *   interface ResolverContext<TModules extends AnyServerModules = AnyServerModules> 
             *     extends MyExtendingInterface {
             *     // Define additional props here
             *   }
             * }
             */
            export interface ResolverContext<TModules extends AnyServerModules = AnyServerModules> {}
    config:
      enumsAsTypes: true
      # https://graphql-code-generator.com/docs/plugins/typescript-resolvers
      defaultMapper: Partial<{T}>
      contextType: ResolverContext
      optionalInfoArgument: true
      useTypeImports: true
config:
  typesPrefix: Gql
